;; Analyzed by ClojureScript 1.8.51
{:use-macros nil, :excludes #{}, :name cljs-2048.core, :imports nil, :requires {events goog.events, goog.events goog.events, r reagent.core, reagent.core reagent.core, game cljs-2048.game, cljs-2048.game cljs-2048.game}, :uses nil, :defs {cell {:protocol-inline nil, :meta {:file "/home/mp/IDE/clojure/cljs-2048/src/clj_2048/core.cljs", :line 15, :column 7, :end-line 15, :end-column 11, :arglists (quote ([k number]))}, :name cljs-2048.core/cell, :variadic false, :file "src/clj_2048/core.cljs", :end-column 11, :method-params ([k number]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 15, :end-line 15, :max-fixed-arity 2, :fn-var true, :arglists (quote ([k number]))}, board {:protocol-inline nil, :meta {:file "/home/mp/IDE/clojure/cljs-2048/src/clj_2048/core.cljs", :line 23, :column 7, :end-line 23, :end-column 12, :arglists (quote ([board-table]))}, :name cljs-2048.core/board, :variadic false, :file "src/clj_2048/core.cljs", :end-column 12, :method-params ([board-table]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 23, :end-line 23, :max-fixed-arity 1, :fn-var true, :arglists (quote ([board-table]))}, row {:protocol-inline nil, :meta {:file "/home/mp/IDE/clojure/cljs-2048/src/clj_2048/core.cljs", :line 20, :column 7, :end-line 20, :end-column 10, :arglists (quote ([k board-row]))}, :name cljs-2048.core/row, :variadic false, :file "src/clj_2048/core.cljs", :end-column 10, :method-params ([k board-row]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 20, :end-line 20, :max-fixed-arity 2, :fn-var true, :arglists (quote ([k board-row]))}, initial-game-state {:protocol-inline nil, :meta {:file "/home/mp/IDE/clojure/cljs-2048/src/clj_2048/core.cljs", :line 11, :column 7, :end-line 11, :end-column 25, :arglists (quote ([]))}, :name cljs-2048.core/initial-game-state, :variadic false, :file "src/clj_2048/core.cljs", :end-column 25, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 11, :end-line 11, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, on-keydown {:protocol-inline nil, :meta {:file "/home/mp/IDE/clojure/cljs-2048/src/clj_2048/core.cljs", :line 63, :column 7, :end-line 63, :end-column 17, :arglists (quote ([e]))}, :name cljs-2048.core/on-keydown, :variadic false, :file "src/clj_2048/core.cljs", :end-column 17, :method-params ([e]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 63, :end-line 63, :max-fixed-arity 1, :fn-var true, :arglists (quote ([e]))}, turn! {:protocol-inline nil, :meta {:file "/home/mp/IDE/clojure/cljs-2048/src/clj_2048/core.cljs", :line 48, :column 7, :end-line 48, :end-column 12, :arglists (quote ([direction])), :doc "Updates the game state with results of a turn."}, :name cljs-2048.core/turn!, :variadic false, :file "src/clj_2048/core.cljs", :end-column 12, :method-params ([direction]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 48, :end-line 48, :max-fixed-arity 1, :fn-var true, :arglists (quote ([direction])), :doc "Updates the game state with results of a turn."}, game-state {:name cljs-2048.core/game-state, :file "src/clj_2048/core.cljs", :line 75, :column 1, :end-line 75, :end-column 20, :meta {:file "/home/mp/IDE/clojure/cljs-2048/src/clj_2048/core.cljs", :line 75, :column 10, :end-line 75, :end-column 20}}, handled-keys {:name cljs-2048.core/handled-keys, :file "src/clj_2048/core.cljs", :line 53, :column 1, :end-line 53, :end-column 18, :meta {:file "/home/mp/IDE/clojure/cljs-2048/src/clj_2048/core.cljs", :line 53, :column 6, :end-line 53, :end-column 18}}, app-header {:protocol-inline nil, :meta {:file "/home/mp/IDE/clojure/cljs-2048/src/clj_2048/core.cljs", :line 27, :column 7, :end-line 27, :end-column 17, :arglists (quote ([]))}, :name cljs-2048.core/app-header, :variadic false, :file "src/clj_2048/core.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 27, :end-line 27, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, app-ui {:protocol-inline nil, :meta {:file "/home/mp/IDE/clojure/cljs-2048/src/clj_2048/core.cljs", :line 42, :column 7, :end-line 42, :end-column 13, :arglists (quote ([]))}, :name cljs-2048.core/app-ui, :variadic false, :file "src/clj_2048/core.cljs", :end-column 13, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 42, :end-line 42, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, on-js-reload {:protocol-inline nil, :meta {:file "/home/mp/IDE/clojure/cljs-2048/src/clj_2048/core.cljs", :line 77, :column 16, :end-line 77, :end-column 28, :export true, :arglists (quote ([]))}, :name cljs-2048.core/on-js-reload, :variadic false, :file "src/clj_2048/core.cljs", :end-column 28, :method-params ([]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 1, :line 77, :end-line 77, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros {r reagent.core, reagent.core reagent.core}, :cljs.analyzer/constants {:seen #{:down :div.board.page-header :ul :aria-hidden :key :strong :li :phase :up :div :id :class :div.board-cell :playing :right :div.board-row :target :href :a :board :left :span}, :order [:board :phase :playing :div.board-cell :class :key :div.board-row :div.board.page-header :div :a :href :strong :id :ul :li :target :span :aria-hidden :up :down :left :right]}, :doc nil}